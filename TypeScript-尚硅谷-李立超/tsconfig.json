{
  // TS编译器的配置文件TS编译器根据它的内容对代码进行编译
  // 指定哪些文件需要编译
  // /** 任意目录
  // /* 任意文件
  "include": ["./object-oriented-syntax/**/*"],

  // 不需要包含的编译文件 被排除的文件
  // 不希望被编译
  // "exclude": ["./src/hello/**/*"]

  // extends
  // 当前配置文件会自动包含config目录下base.json中的所以配置信息

  // files
  // 指定被编译的文件列表 只有文件较少时才会用到

  //compileOptions 编译器的选项
  // 包含多个子选项用来完成对编译的配置

  "compilerOptions": {
    // 用来指定TS被编译为ES的版本
    // "target": "ES3"
    // 可选值
    // 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'esnext'
    "target": "es2015",

    // 选择哪种模块化解决方案 模块化规范
    // 可选值
    // 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'esnext'
    "module": "es2015",

    // 指定浏览器 项目中使用的库
    // 可选值
    // 'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'esnext', 'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 'webworker.iterable', 'scripthost', 'es2015.core', 'es2015.collection', 'es2015.generator', 'es2015.iterable', 'es2015.promise', 'es2015.proxy', 'es2015.reflect', 'es2015.symbol', 'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.object', 'es2017.sharedmemory', 'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 'es2018.asynciterable', 'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 'es2019.object', 'es2019.string', 'es2019.symbol', 'es2020.bigint', 'es2020.promise', 'es2020.sharedmemory', 'es2020.string', 'es2020.symbol.wellknown', 'es2020.intl', 'esnext.array', 'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.bigint', 'esnext.string', 'esnext.promise', 'esnext.weakref'
    // "lib": [],

    // 编译完成的文件位置
    "outDir": "./dist",

    // 将代码合并为一个文件
    // 设置outFile后作用域中的代码 会合并到同一个文件中
    // "outFile": "./dist/app.js",

    // allow
    // 是否对JS文件进行编译
    // "allowJs": false
    "allowJs": true,

    // 是否检查JS代码符合规范
    "checkJs": true,
    // "checkJs": false

    // 是否移除注释
    "removeComments": false,
    // "removeComments": true

    // 不生产编译文件
    "noEmit": false,

    // 有错误不生成编译文件
    "noEmitOnError": true,

    // 设置严格模式 默认false
    "alwaysStrict": true,

    // 不允许隐式any类型
    "noImplicitAny": true,

    //不允许不明类型的this
    "noImplicitThis": true,

    // 检查变量是否为空
    "strictNullChecks": true,

    // 所有严格检查的总开关
    // 建议开启
    "strict": true
  }
}
